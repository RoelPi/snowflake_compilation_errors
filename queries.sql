-- These queries accompany a blog post regarding compilation errors in Snowflake.
USE DATABASE SNOWFLAKE_SAMPLE_DATA;

-- Query 1: returns a compilation error
SELECT
    O_CUSTKEY,
    O_ORDERSTATUS,
    SUM(O_TOTALPRICE),
    COUNT(O_ORDERKEY)
FROM TPCH_SF1.ORDERS 
GROUP BY
    1, 2
LIMIT 10;

-- Query 3: returns a compilation error (option 1)
SELECT
    O_CUSTKEY,
    O_ORDERSTATUS,
    SUM(O_TOTALPRICE) AS REV_PER_CUSTKEY_ORDERSTATUS,
    SUM(O_TOTALPRICE) OVER (PARTITION BY O_CUSTKEY) AS REV_PER_CUSTKEY
    -- Extra: in typical use cases, you'd follow up with this calculation
    -- SUM(O_TOTALPRICE) / SUM(SUM(O_TOTALPRICE)) OVER (PARTITION BY O_CUSTKEY) AS SHARE_PER_CUSTKEY
FROM TPCH_SF1.ORDERS 
GROUP BY
    1, 2
ORDER BY
    O_CUSTKEY, O_ORDERSTATUS
LIMIT 10;

-- Query 3: fixing the erroneous query
SELECT
    O_CUSTKEY,
    O_ORDERSTATUS,
    SUM(O_TOTALPRICE) AS REV_PER_CUSTKEY_ORDERSTATUS,
    SUM(SUM(O_TOTALPRICE)) OVER (PARTITION BY O_CUSTKEY) AS REV_PER_CUSTKEY
FROM TPCH_SF1.ORDERS 
GROUP BY
    1, 2
ORDER BY
    O_CUSTKEY, O_ORDERSTATUS

-- Query 4: returns a compilation error (option 2)
WITH FIRST_CTE AS (
    SELECT
        O_CUSTKEY,
        O_ORDERSTATUS,
        SUM(O_TOTALPRICE) AS REV_PER_CUSTKEY_ORDERSTATUS
    FROM TPCH_SF1.ORDERS 
    GROUP BY
        1, 2
)
SELECT
    O_CUSTKEY,
    O_ORDERSTATUS,
    REV_PER_CUSTKEY_ORDERSTATUS,
    SUM(REV_PER_CUSTKEY_ORDERSTATUS) OVER (PARTITION BY O_CUSTKEY) AS REV_PER_CUSTKEY
FROM
    FIRST_CTE
ORDER BY
    O_CUSTKEY, O_ORDERSTATUS
LIMIT 10;
    

